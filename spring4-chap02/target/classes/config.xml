<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <context:annotation-config />   <!--다수의 스프링 전처리기 Bean을 스프링 컨테이너에 등록해준다.-->

    <bean id="user1" class="practice.spring.User">
        <!--생성자의 파라미터로 전달하기 위한 값. name을 지정해주지 않으면 순서대로 전달된다.-->
        <constructor-arg value="yhchoi"/>
        <constructor-arg value="1234"/>
    </bean>

    <bean id="user2" class="practice.spring.User">
        <constructor-arg value="ysjeong"/>
        <constructor-arg value="qwer"/>
    </bean>

    <bean id="userRepository" class="practice.spring.UserRepository">
        <!--List 형태의 파라미터 전달.-->
        <property name="users">
            <list>
                <ref bean="user1"/>
                <ref bean="user2"/>
            </list>
        </property>
    </bean>

    <bean id="pwChangeSvc" class="practice.spring.PasswordChangeService">
        <!--위에 정의한 bean을 파라미터로 사용.(ref 사용)-->
        <constructor-arg><ref bean="userRepository"/></constructor-arg>
    </bean>

    <bean id="authFailLogger" class="practice.spring.AuthFailLogger">
        <property name="threshold" value="3"/>
    </bean>

    <bean id="authenticationService" class="practice.spring.AuthenticationService">
        <property name="failLogger" ref="authFailLogger"/>
        <property name="userRepository" ref="userRepository"/>
    </bean>

    <!--FactoryBean의 구현체 정의. SearchClientFactoryBean을 사용하지만 getBean을 통해 반환되는 객체는 SearchClientFactory-->
    <bean id="searchClientFactory" class="practice.spring.search.SearchClientFactoryBean">
        <property name="server" value="127.0.0.1" />
        <property name="port" value="8888" />
        <property name="contentType" value="json" />
    </bean>

    <bean id="orderService" class="practice.spring.OrderService">
        <!--@Autowired를 사용하기 때문에 property 필요 없음. -->
    </bean>
</beans>
